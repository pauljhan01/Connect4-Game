


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   22 00000000 40004100 
                       DC      EQU              0x40004100
   23 00000000 00000000 
                       DC_COMMAND
                               EQU              0
   24 00000000 00000040 
                       DC_DATA EQU              0x40
   25 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   26 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   27 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   28 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   29 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   30 00000000         
   31 00000000                 EXPORT           writecommand
   32 00000000                 EXPORT           writedata
   33 00000000         
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000                 THUMB
   36 00000000                 ALIGN



ARM Macro Assembler    Page 2 


   37 00000000         
   38 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   39 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   40 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   41 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   42 00000000         ; lot of data, the FIFOs are not used when writing
   43 00000000         ; commands, and they are used when writing data.  This
   44 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   45 00000000         ; that is actually being transmitted.
   46 00000000         ; The write command operation waits until all data has b
                       een
   47 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   48 00000000         ; the command, and then waits for the transmission to
   49 00000000         ; finish.
   50 00000000         ; The write data operation waits until there is room in 
                       the
   51 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   52 00000000         ; and then adds the data to the transmit FIFO.
   53 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   54 00000000         ; the SSI0 module is not initialized and enabled.
   55 00000000         
   56 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   57 00000000         ; Input: R0  8-bit command to transmit
   58 00000000         ; Output: none
   59 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   60 00000000         writecommand
   61 00000000         ;; --UUU-- Code to write a command to the LCD
   62 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   63 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   64 00000000         ;3) Clear D/C=PA6 to zero
   65 00000000         ;4) Write the command to SSI0_DR_R
   66 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   67 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   68 00000000 4911            LDR              R1, = SSI0_SR_R
   69 00000002 680A            LDR              R2, [R1]
   70 00000004 F002 0210       AND              R2, #0x10
   71 00000008 2A10            CMP              R2, #0x10
   72 0000000A D0FE            BEQ              writecommand
   73 0000000C         
   74 0000000C 4A0F            LDR              R2, = GPIO_PORTA_DATA_R
   75 0000000E 6813            LDR              R3, [R2]
   76 00000010 F023 0340       BIC              R3, #0x40
   77 00000014 7013            STRB             R3, [R2]
   78 00000016         
   79 00000016 4A0E            LDR              R2, = SSI0_DR_R
   80 00000018 7010            STRB             R0, [R2]
   81 0000001A         



ARM Macro Assembler    Page 3 


   82 0000001A 680A    waitforbusy
                               LDR              R2, [R1]
   83 0000001C F002 0210       AND              R2, #0x10
   84 00000020 2A10            CMP              R2, #0x10
   85 00000022 D0FA            BEQ              waitforbusy
   86 00000024         
   87 00000024 4770            BX               LR          ;   return
   88 00000026         
   89 00000026         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   90 00000026         ; Input: R0  8-bit data to transmit
   91 00000026         ; Output: none
   92 00000026         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   93 00000026         writedata
   94 00000026         ;; --UUU-- Code to write data to the LCD
   95 00000026         ;1) Read SSI0_SR_R and check bit 1, 
   96 00000026         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
   97 00000026         ;3) Set D/C=PA6 to one
   98 00000026         ;4) Write the 8-bit data to SSI0_DR_R
   99 00000026 4908            LDR              R1, = SSI0_SR_R
  100 00000028 680A            LDR              R2, [R1]
  101 0000002A F002 0202       AND              R2, #0x02
  102 0000002E EA4F 0252       LSR              R2, #1
  103 00000032 2A00            CMP              R2, #0
  104 00000034 D0FE            BEQ              writedata
  105 00000036         
  106 00000036 4A05            LDR              R2, = GPIO_PORTA_DATA_R
  107 00000038 6813            LDR              R3, [R2]
  108 0000003A F043 0340       ORR              R3, #0x40
  109 0000003E 6013            STR              R3, [R2]
  110 00000040         
  111 00000040 4903            LDR              R1, = SSI0_DR_R
  112 00000042 6008            STR              R0, [R1]
  113 00000044         
  114 00000044         
  115 00000044         
  116 00000044         
  117 00000044 4770            BX               LR          ;   return
  118 00000046         
  119 00000046         
  120 00000046         ;***************************************************
  121 00000046         ; This is a library for the Adafruit 1.8" SPI display.
  122 00000046         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  123 00000046         ; ----> http://www.adafruit.com/products/358
  124 00000046         ; as well as Adafruit raw 1.8" TFT display
  125 00000046         ; ----> http://www.adafruit.com/products/618
  126 00000046         ;
  127 00000046         ; Check out the links above for our tutorials and wiring
                        diagrams
  128 00000046         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  129 00000046         ; interface (RST is optional)
  130 00000046         ; Adafruit invests time and resources providing this ope
                       n source code,
  131 00000046         ; please support Adafruit and open-source hardware by pu
                       rchasing



ARM Macro Assembler    Page 4 


  132 00000046         ; products from Adafruit!
  133 00000046         ;
  134 00000046         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  135 00000046         ; MIT license, all text above must be included in any re
                       distribution
  136 00000046         ;****************************************************
  137 00000046         
  138 00000046 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  139 00000048                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_SpaceInvaders -IC:\Users\paulh\AppData\
Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\paulh\AppData\Loc
al\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SET
A 1" --predefine="__UVISION_VERSION SETA 535" --predefine="_RTE_ SETA 1" --pred
efine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file LCD.s
   Uses
      None
Comment: .text unused
waitforbusy 0000001A

Symbol: waitforbusy
   Definitions
      At line 82 in file LCD.s
   Uses
      At line 85 in file LCD.s
Comment: waitforbusy used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 60 in file LCD.s
   Uses
      At line 31 in file LCD.s
      At line 72 in file LCD.s

writedata 00000026

Symbol: writedata
   Definitions
      At line 93 in file LCD.s
   Uses
      At line 32 in file LCD.s
      At line 104 in file LCD.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 22 in file LCD.s
   Uses
      None
Comment: DC unused
DC_COMMAND 00000000

Symbol: DC_COMMAND
   Definitions
      At line 23 in file LCD.s
   Uses
      None
Comment: DC_COMMAND unused
DC_DATA 00000040

Symbol: DC_DATA
   Definitions
      At line 24 in file LCD.s
   Uses
      None
Comment: DC_DATA unused
GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 21 in file LCD.s
   Uses
      At line 74 in file LCD.s
      At line 106 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 25 in file LCD.s
   Uses
      At line 79 in file LCD.s
      At line 111 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 26 in file LCD.s
   Uses
      At line 68 in file LCD.s
      At line 99 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 28 in file LCD.s
   Uses
      None
Comment: SSI_SR_BSY unused



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 27 in file LCD.s
   Uses
      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 29 in file LCD.s
   Uses
      None
Comment: SSI_SR_TNF unused
9 symbols
349 symbols in table
