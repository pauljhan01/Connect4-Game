


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 PRESERVE8
   19 00000000                 THUMB
   20 00000000         
   21 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   22 00000000         ; Output a 32-bit number in unsigned decimal format
   23 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   24 00000000         ; Output: none
   25 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   26 00000000         ; R0=0,    then output "0"
   27 00000000         ; R0=3,    then output "3"
   28 00000000         ; R0=89,   then output "89"
   29 00000000         ; R0=123,  then output "123"
   30 00000000         ; R0=9999, then output "9999"
   31 00000000         ; R0=4294967295, then output "4294967295"
   32 00000000         LCD_OutDec
   33 00000000         
   34 00000000         ; if n< 10, print that character, return
   35 00000000         ; n >= 10, quo equals divide by 10, remainder equals n -
                        quo*ten
   36 00000000         ; call lcd_outdec with quo
   37 00000000         ; print remainder
   38 00000000         
   39 00000000 00000000 
                       N       EQU              0           ;Store N on stack
   40 00000000 00000004 
                       QuoT    EQU              4           ;Store Quotient*10 
                                                            on stack
   41 00000000 00000008 
                       CntD    EQU              8
   42 00000000         
   43 00000000 E92D 4800       PUSH             {R11, LR}
   44 00000004         
   45 00000004 B083            SUB              SP, #12     ;Reserve 12 spaces 
                                                            on the stack for th
                                                            e local variables



ARM Macro Assembler    Page 2 


   46 00000006 46EB            MOV              R11, SP     ;R11 holds our inti
                                                            al stack pointer
   47 00000008 F8CB 0000       STR              R0, [R11, #N] ;Store N on the s
                                                            tack
   48 0000000C F04F 0000       MOV              R0, #0
   49 00000010 F8CB 0004       STR              R0, [R11, #QuoT]
   50 00000014 F8CB 0008       STR              R0, [R11, #CntD]
   51 00000018         
   52 00000018         loopDec
   53 00000018 F8DB 0000       LDR              R0, [R11,#N]
   54 0000001C F04F 020A       MOV              R2, #10
   55 00000020 FBB0 F1F2       UDIV             R1, R0, R2
   56 00000024 F8CB 1000       STR              R1, [R11,#N] 
                                                            ; N/10 is the new n
                                                            
   57 00000028 FB02 F201       MUL              R2, R1
   58 0000002C F8CB 2004       STR              R2, [R11, #QuoT]
   59 00000030 F8DB 2004       LDR              R2, [R11, #QuoT]
   60 00000034 EBA0 0002       SUB              R0, R0, R2  ; n - n/10*10
   61 00000038 B401            PUSH             {R0}        ; Store value to pr
                                                            int later
   62 0000003A F8DB 0008       LDR              R0, [R11, #CntD]
   63 0000003E F04F 0101       MOV              R1, #1
   64 00000042 4408            ADD              R0, R1
   65 00000044 F8CB 0008       STR              R0, [R11, #CntD] 
                                                            ; increment count
   66 00000048 F8DB 0000       LDR              R0, [R11,#N]
   67 0000004C 2800            CMP              R0, #0      ;Check if N==0
   68 0000004E D1E3            BNE              loopDec     ;if not 0, continue
                                                            
   69 00000050         DecPrint
   70 00000050 BC01            POP              {R0}        ;Restore digit to R
                                                            0
   71 00000052 F100 0030       ADD              R0, R0, #0x30 ;Add 0x30 to turn
                                                             the number into it
                                                            s ASCII code
   72 00000056 F7FF FFFE       BL               ST7735_OutChar
   73 0000005A F8DB 0008       LDR              R0, [R11, #CntD]
   74 0000005E 3801            SUBS             R0, #1
   75 00000060 F8CB 0008       STR              R0, [R11, #CntD] 
                                                            ; Decrement count
   76 00000064 2800            CMP              R0, #0
   77 00000066 D1F3            BNE              DecPrint    ;If there are more 
                                                            characters to outpu
                                                            t, continue
   78 00000068 B003            ADD              SP, #12
   79 0000006A E8BD 4800       POP              {R11, LR}
   80 0000006E 4770            BX               LR
   81 00000070         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   82 00000070         
   83 00000070         ; -----------------------LCD _OutFix--------------------
                       --
   84 00000070         ; Output characters to LCD display in fixed-point format
                       
   85 00000070         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   86 00000070         ; Inputs:  R0 is an unsigned 32-bit number
   87 00000070         ; Outputs: none
   88 00000070         ; E.g., R0=0,    then output "0.000"



ARM Macro Assembler    Page 3 


   89 00000070         ;       R0=3,    then output "0.003"
   90 00000070         ;       R0=89,   then output "0.089"
   91 00000070         ;       R0=123,  then output "0.123"
   92 00000070         ;       R0=9999, then output "9.999"
   93 00000070         ;       R0>9999, then output "*.***"
   94 00000070         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   95 00000070         LCD_OutFix
   96 00000070         
   97 00000070         ; if n< 10, print that character, return
   98 00000070         ; if 9999 > n >= 10, quo equals divide by 10, remainder 
                       equals n - quo*ten
   99 00000070         ; if n > 9999, output *.***
  100 00000070         ; call lcd_outdec with quo
  101 00000070         ; print remainder
  102 00000070         
  103 00000070 00000000 
                       NF      EQU              0           ;Store N on stack
  104 00000070 00000004 
                       QTF     EQU              4           ;Store QuoTen
  105 00000070 00000008 
                       Cnt     EQU              8           ;Keep count
  106 00000070 0000000C 
                       Ast     EQU              12
  107 00000070 00000010 
                       Per     EQU              16
  108 00000070 00000014 
                       Zer     EQU              20
  109 00000070         
  110 00000070 E92D 4800       PUSH             {R11, LR}
  111 00000074         
  112 00000074 B086            SUB              SP, #24     ;Reserve 20 spaces 
                                                            on the stack for th
                                                            e local variables
  113 00000076 46EB            MOV              R11, SP
  114 00000078 F8CB 0000       STR              R0, [R11, #NF] ;Store N on the 
                                                            stack
  115 0000007C F04F 0100       MOV              R1, #0      ;Store 0 as initial
                                                             count
  116 00000080 F8CB 1008       STR              R1, [R11, #Cnt]
  117 00000084 F04F 012A       MOV              R1, #0x2A   ;Store asterisk asc
                                                            ii on stack
  118 00000088 F8CB 100C       STR              R1, [R11, #Ast]
  119 0000008C F04F 012E       MOV              R1, #0x2E   ;Store period ascii
                                                             on stack
  120 00000090 F8CB 1010       STR              R1, [R11, #Per]
  121 00000094 F04F 0130       MOV              R1, #0x30
  122 00000098 F8CB 1014       STR              R1, [R11, #Zer] ;Store zero asc
                                                            ii on stack
  123 0000009C         
  124 0000009C         
  125 0000009C         ;CheckIfMax
  126 0000009C F8DB 0000       LDR              R0, [R11, #NF]
  127 000000A0 F242 710F       MOV              R1, #9999
  128 000000A4 1A41            SUBS             R1, R0, R1  ;Compare to 9999
  129 000000A6 D82F            BHI              MaxPrint    ;If greater than 99
                                                            99, we cannot outpu
                                                            t this as a fixed p
                                                            oint number



ARM Macro Assembler    Page 4 


  130 000000A8         
  131 000000A8         loopFix
  132 000000A8 F8DB 1008       LDR              R1, [R11, #Cnt]
  133 000000AC F101 0101       ADD              R1, #1
  134 000000B0 F8CB 1008       STR              R1, [R11, #Cnt] 
                                                            ;Increment count
  135 000000B4 2904            CMP              R1, #4      ;If we have already
                                                             found three digits
                                                            , we need to output
                                                             .
  136 000000B6 D023            BEQ              OutPeriod
  137 000000B8 F8DB 1000       LDR              R1, [R11, #NF]
  138 000000BC 4608            MOV              R0, R1
  139 000000BE F04F 020A       MOV              R2, #10
  140 000000C2 FBB1 F1F2       UDIV             R1, R2      ;Divide N by ten --
                                                            - N/10
  141 000000C6 F8CB 1000       STR              R1, [R11, #NF] 
                                                            ;N/10 is the next N
                                                            
  142 000000CA FB01 F102       MUL              R1, R2      ;N/10*10
  143 000000CE EBA0 0001       SUB              R0, R1      ;N/10*10 - N
  144 000000D2 F100 0030       ADD              R0, R0, #0x30 ;Add 0x30 to turn
                                                             into ASCII charact
                                                            er
  145 000000D6 B401            PUSH             {R0}
  146 000000D8 F8DB 0008       LDR              R0, [R11, #Cnt]
  147 000000DC 2805            CMP              R0, #5      ;If we have five di
                                                            gits, we need to ou
                                                            tput
  148 000000DE D000            BEQ              FixPrint
  149 000000E0 E7E2            B                loopFix
  150 000000E2         
  151 000000E2         FixPrint
  152 000000E2         
  153 000000E2 BC01            POP              {R0}        ;Restore digit to R
                                                            0
  154 000000E4 F7FF FFFE       BL               ST7735_OutChar 
                                                            ;Output character
  155 000000E8 F8DB 1008       LDR              R1, [R11, #Cnt]
  156 000000EC F1A1 0101       SUB              R1, #1      ;Decrement counter
  157 000000F0 F8CB 1008       STR              R1, [R11, #Cnt]
  158 000000F4 2900            CMP              R1, #0      ;If count is 0 we a
                                                            re done
  159 000000F6 D1F4            BNE              FixPrint
  160 000000F8 B006            ADD              SP, #24
  161 000000FA E8BD 4800       POP              {R11, LR}
  162 000000FE 4770            BX               LR
  163 00000100         
  164 00000100         OutPeriod
  165 00000100         
  166 00000100 F8DB 1010       LDR              R1, [R11, #Per]
  167 00000104 B402            PUSH             {R1}
  168 00000106 E7CF            B                loopFix
  169 00000108         
  170 00000108         MaxPrint
  171 00000108 F8DB 000C       LDR              R0, [R11,#Ast] ;Output *.***
  172 0000010C F7FF FFFE       BL               ST7735_OutChar 
                                                            ;Output character
  173 00000110 F8DB 0010       LDR              R0, [R11,#Per]



ARM Macro Assembler    Page 5 


  174 00000114 F7FF FFFE       BL               ST7735_OutChar 
                                                            ;Output character
  175 00000118 F8DB 000C       LDR              R0, [R11,#Ast]
  176 0000011C F7FF FFFE       BL               ST7735_OutChar 
                                                            ;Output character
  177 00000120 F8DB 000C       LDR              R0, [R11,#Ast]
  178 00000124 F7FF FFFE       BL               ST7735_OutChar 
                                                            ;Output character
  179 00000128 F8DB 000C       LDR              R0, [R11,#Ast]
  180 0000012C F7FF FFFE       BL               ST7735_OutChar 
                                                            ;Output character
  181 00000130 B006            ADD              SP, #24
  182 00000132 E8BD 4800       POP              {R11, LR}
  183 00000136         
  184 00000136 4770            BX               LR
  185 00000138         
  186 00000138                 ALIGN
  187 00000138         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  188 00000138         
  189 00000138                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  190 00000138                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_SpaceInvaders -IC:\Users\paulh\AppD
ata\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\paulh\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 535" --predefine="_RTE_ SETA 1" --
predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\print.lst P
rint.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
DecPrint 00000050

Symbol: DecPrint
   Definitions
      At line 69 in file Print.s
   Uses
      At line 77 in file Print.s
Comment: DecPrint used once
FixPrint 000000E2

Symbol: FixPrint
   Definitions
      At line 151 in file Print.s
   Uses
      At line 148 in file Print.s
      At line 159 in file Print.s

LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 32 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000070

Symbol: LCD_OutFix
   Definitions
      At line 95 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
MaxPrint 00000108

Symbol: MaxPrint
   Definitions
      At line 170 in file Print.s
   Uses
      At line 129 in file Print.s
Comment: MaxPrint used once
OutPeriod 00000100

Symbol: OutPeriod
   Definitions
      At line 164 in file Print.s
   Uses
      At line 136 in file Print.s
Comment: OutPeriod used once
loopDec 00000018




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: loopDec
   Definitions
      At line 52 in file Print.s
   Uses
      At line 68 in file Print.s
Comment: loopDec used once
loopFix 000000A8

Symbol: loopFix
   Definitions
      At line 131 in file Print.s
   Uses
      At line 149 in file Print.s
      At line 168 in file Print.s

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Ast 0000000C

Symbol: Ast
   Definitions
      At line 106 in file Print.s
   Uses
      At line 118 in file Print.s
      At line 171 in file Print.s
      At line 175 in file Print.s
      At line 177 in file Print.s
      At line 179 in file Print.s

Cnt 00000008

Symbol: Cnt
   Definitions
      At line 105 in file Print.s
   Uses
      At line 116 in file Print.s
      At line 132 in file Print.s
      At line 134 in file Print.s
      At line 146 in file Print.s
      At line 155 in file Print.s
      At line 157 in file Print.s

CntD 00000008

Symbol: CntD
   Definitions
      At line 41 in file Print.s
   Uses
      At line 50 in file Print.s
      At line 62 in file Print.s
      At line 65 in file Print.s
      At line 73 in file Print.s
      At line 75 in file Print.s

N 00000000

Symbol: N
   Definitions
      At line 39 in file Print.s
   Uses
      At line 47 in file Print.s
      At line 53 in file Print.s
      At line 56 in file Print.s
      At line 66 in file Print.s

NF 00000000

Symbol: NF
   Definitions
      At line 103 in file Print.s
   Uses
      At line 114 in file Print.s
      At line 126 in file Print.s
      At line 137 in file Print.s
      At line 141 in file Print.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Per 00000010

Symbol: Per
   Definitions
      At line 107 in file Print.s
   Uses
      At line 120 in file Print.s
      At line 166 in file Print.s
      At line 173 in file Print.s

QTF 00000004

Symbol: QTF
   Definitions
      At line 104 in file Print.s
   Uses
      None
Comment: QTF unused
QuoT 00000004

Symbol: QuoT
   Definitions
      At line 40 in file Print.s
   Uses
      At line 49 in file Print.s
      At line 58 in file Print.s
      At line 59 in file Print.s

Zer 00000014

Symbol: Zer
   Definitions
      At line 108 in file Print.s
   Uses
      At line 122 in file Print.s
Comment: Zer used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 72 in file Print.s
      At line 154 in file Print.s
      At line 172 in file Print.s
      At line 174 in file Print.s
      At line 176 in file Print.s
      At line 178 in file Print.s
      At line 180 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
354 symbols in table
